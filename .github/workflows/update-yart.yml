name: update-yart

on: 
  schedule:
    - cron: '30 2 * * *'

  workflow_dispatch:

jobs:
  commented:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: update
        run: |
          git config user.name github-bot
          git config user.email "<>"

          # SHOULD_PUSH=0

          npm outdated --json > _v.json

          function update {
            local NAME=$1
            node -e "
            const fs = require('fs')
            const version = fs.readFileSync('./_v.json', 'utf-8')
            const dep = version['$NAME']
            if(dep.current === dep.latest) return
            const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf-8'))
            pkg.dependencies['$NAME'] = '$TARGET_VERSION'
            fs.writeFileSync('./package.json', JSON.stringify(pkg, undefined, 2), 'utf-8')
            "

            # local CURRENT_VERSION=`node -p "require('$NAME/package.json').version"`
            # local TARGET_VERSION=`npm view $NAME version`

            # echo "package: $NAME" 
            # echo "current version: $CURRENT_VERSION"
            # echo "target version: $TARGET_VERSION"

            # if [[ $CURRENT_VERSION == $TARGET_VERSION ]]; then
            #   echo "$NAME has same version, no need to update"
            #   return
            # else
            #   node -e "
            #   const fs = require('fs')
            #   const pkg = JSON.parse(fs.readFileSync('./package.json', 'utf-8'))
            #   pkg.dependencies['$NAME'] = '$TARGET_VERSION'
            #   fs.writeFileSync('./package.json', JSON.stringify(pkg, undefined, 2), 'utf-8')
            #   "
              
            #   git add .
            #   git commit -m "note:update $NAME version from $CURRENT_VERSION to $TARGET_VERSION"
            #   SHOULD_PUSH=1
            # fi
          }

          update yart-cli
          update yart-dev-server

          rm _v.json

          # if [[ $SHOULD_PUSH == 1 ]]; then
          yarn
          git push origin master
          # fi
